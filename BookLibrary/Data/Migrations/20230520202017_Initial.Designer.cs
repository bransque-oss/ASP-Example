// <auto-generated />
using Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Data.Migrations
{
    [DbContext(typeof(BookLibraryDbContext))]
    [Migration("20230520202017_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Data.Models.DbAuthor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Authors", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Andrew Lock graduated with an Engineering degree from Cambridge University, specializing in Software Engineering, and went on to obtain a PhD in Digital Image Processing. He has been developing professionally using .NET for the last 10 years, using a wide range of technologies including WinForms, ASP.NET WebForms, ASP.NET MVC, and ASP.NET Webpages.\r\n\r\nHe has been building and maintaining applications with ASP.NET Core since the release of 1.0 in 2016. Andrew has a very active blog at https://andrewlock.net dedicated to ASP.NET Core. It is frequently featured in the community spotlight by the ASP.NET team at Microsoft, on the .NET blog, and in the weekly community standups. Andrew has been a Microsoft Valued Professional (MVP) since 2017, and is author of the book ASP.NET Core in Action.",
                            Name = "Andrew Lock"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Эрих Мария Pемарк - знаменитый писатель XX века. Родился в г. Oснабрюк (Германия) 22 июня 1898 года в семье переплетчика Петера Франца Pемарк и Анны Марии Шталькнеxт. В юности увлекался творчеством Томаса Манна, Цвейга, Пруста, Достоевского и Гете. После церковной школы в 1915 году поступил в католическую семинарию, но закончить не успел, через год его призвали в армию, а в 1917 году направили на Западный фронт, где он был ранен и остаток войны провел в военном госпитале. В 1919-1921 годах работал сначала учителем, а затем сменил несколько профессий: побывал и в роли воскресного органиста, и продавца надгробных памятников. События этого периода позже легли в основу его произведения \"Черный обелиск\".",
                            Name = "Эрих Мария Ремарк"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Дуглас Ноэль Адамс — английский писатель, драматург и сценарист, автор юмористических фантастических произведений. Известен как создатель знаменитой серии книг «Автостопом по галактике». Адамс получил степень бакалавра и магистра по специализации \"Английская литература\". Он начал публиковаться, будучи еще школьником. Его творческая деятельность не ограничивается лишь писательством. Адамс участвует в эпизодах скетч-шоу \"Монти Пайтон\", пишет сценарии для телеканала BBC2, музицирует. 1957 - переезд из Кэмбриджа в Брентвуд, Эссекс. 1959-1570 - школа Праймроуз Хилл 1962 - публикация в школьном журнале 1965 - публикация в журнале для мальчиков 1971 - поступление в колледж Св. Джона, Кэмбридж 1974 - получение степени бакалавра, английская литература 1974 - сотрудничество с телевидением середина 70-х гг. - сложности с работой. 1978 - первое появление \"Автостопом по галактике\" на радио. Первая серия из задуманных четырех цикла рассказов для радио 1978 - пишет сценарий эпизода The Pirate Planet сюжетной арки Key to Time в телевизионном сериале \"Доктор Кто\" 1979 - соавторство в сценарии для двух серий телевизионного сериала \"Доктор Снагглс\" 1979 - соавторство в сценарии для четырех эпизодов серии City of Death телевизионного сериала \"Доктор Кто\" 1980 - выпуск на радио второй серии \"Автостопом по галактике\" 1979-1992 - появление \"Автостопом по галактике\" в привычном сегодня виде книг. 1980 - начала долгого процесса экранизации \"Путеводителя\" 1981 - на канал BBC Two выходят шесть эпизодов сериала \"Путеводитель по Галактике для автостопщиков\" 2005 - выход фильма \"Автостопом по галактике\" на широкие экраны. Дуглас Адамс этого уже не увидел.",
                            Name = "Дуглас Адамс"
                        });
                });

            modelBuilder.Entity("Data.Models.DbBook", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AuthorId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1500)
                        .HasColumnType("nvarchar(1500)");

                    b.Property<string>("Isbn")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.ToTable("Books", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AuthorId = 1,
                            Description = "Summary\r\n\r\nASP.NET Core in Action is for C# developers without any web development experience who want to get started and productive fast using ASP.NET Core 2.0 to build web applications.\r\n\r\nPurchase of the print book includes a free eBook in PDF, Kindle, and ePub formats from Manning Publications.\r\n\r\nAbout the Technology\r\n\r\nThe dev world has permanently embraced open platforms with flexible tooling, and ASP.NET Core has changed with it. This free, open source web framework delivers choice without compromise. You can enjoy the benefits of a mature, well-supported stack and the freedom to develop and deploy from and onto any cloud or on-prem platform.\r\n\r\nAbout the Book\r\n\r\nASP.NET Core in Action opens up the world of cross-platform web development with .NET. You'll start with a crash course in .NET Core, immediately cutting the cord between ASP.NET and Windows. Then, you'll begin to build amazing web applications step by step, systematically adding essential features like logins, configuration, dependency injection, and custom components. Along the way, you'll mix in important process steps like testing, multiplatform deployment, and security.\r\n\r\nWhat's Inside\r\nCovers ASP.NET Core 2.0\r\nDynamic page generation with the Razor templating engine\r\nDeveloping ASP.NET Core apps for non-Windows servers\r\nClear, annotated examples in C#\r\n",
                            Isbn = "978-1617294617",
                            Title = "ASP.NET Core In Action"
                        },
                        new
                        {
                            Id = 2,
                            AuthorId = 2,
                            Description = "Трое друзей - Робби, отчаянный автогонщик Кестер и \"последний романтик\" Лени прошли Первую мировую войну. Вернувшись в гражданскую жизнь, они основали небольшую автомастерскую. И хотя призраки прошлого преследуют их, они не унывают - ведь что может быть лучше дружбы, крепкой и верной, ради которой можно отдать последнее? Наверное, лишь только любовь, не знающая границ и пределов. Прекрасная и грустная Пат, нежная возлюбленная Робби, рассеивает мрак бессмысленности его существования. Однако обретенному счастью угрожают отголоски все той же войны - существующие уже не только в памяти и сознании героев, а суровым образом воплотившиеся в реальность... Эта история раз и навсегда покорила сердца миллионов читателей по всему миру. На этой книге выросли поколения, ее давно раздергали на цитаты, неоднократно экранизировали и продолжают ставить на сцене. Ее хочется перечитывать снова и снова.",
                            Isbn = "978-5-17-082358-1",
                            Title = "Три товарища"
                        },
                        new
                        {
                            Id = 3,
                            AuthorId = 2,
                            Description = "Говоря о Первой мировой войне, всегда вспоминают одно произведение Эриха Марии Ремарка.\r\n\"На Западном фронте без перемен\".\r\nЭто рассказ о немецких мальчишках, которые под действием патриотической пропаганды идут на войну, не зная о том, что впереди их ждет не слава героев, а инвалидность и смерть… \r\nКаждый день войны уносит жизни чьих-то отцов, сыновей, а газеты тем временем бесстрастно сообщают: \"На Западном фронте без перемен...\".\r\nЭта книга - не обвинение, не исповедь. \r\nЭто попытка рассказать о поколении, которое погубила война, о тех, кто стал ее жертвой, даже если сумел спастись от снарядов и укрыться от пули.",
                            Isbn = "978-5-17-108431-8",
                            Title = "На западном фронте без перемен"
                        },
                        new
                        {
                            Id = 4,
                            AuthorId = 3,
                            Description = "В этой книге читатель вновь встретится с полюбившимися героями: среднестатистическим приспособленцем Артуром Дентом, сотрудником межгалактического издательства Фордом Префектом, продвинутой барышней Триллиан, депрессивным роботом Марвином, - и отправится вместе с ними в новые странствия по бесчисленным мирам, наполненным опасными приключениями и непредсказуемыми сюрпризами!",
                            Isbn = "978-5-17-085834-7",
                            Title = "Автостопом по галактике"
                        });
                });

            modelBuilder.Entity("Data.Models.DbUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("CanChangeEntities")
                        .HasColumnType("bit");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CanChangeEntities = true,
                            Login = "admin",
                            Password = "3627909a29c31381a071ec27f7c9ca97726182aed29a7ddd2e54353322cfb30abb9e3a6df2ac2c20fe23436311d678564d0c8d305930575f60e2d3d048184d79"
                        },
                        new
                        {
                            Id = 2,
                            CanChangeEntities = false,
                            Login = "someuser",
                            Password = "3c9909afec25354d551dae21590bb26e38d53f2173b8d3dc3eee4c047e7ab1c1eb8b85103e3be7ba613b31bb5c9c36214dc9f14a42fd7a2fdb84856bca5c44c2"
                        });
                });

            modelBuilder.Entity("Data.Models.DbBook", b =>
                {
                    b.HasOne("Data.Models.DbAuthor", "Author")
                        .WithMany("Books")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");
                });

            modelBuilder.Entity("Data.Models.DbAuthor", b =>
                {
                    b.Navigation("Books");
                });
#pragma warning restore 612, 618
        }
    }
}
